!function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(n,i,function(e){return t[e]}.bind(null,i));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";function n(t,e){return{x:(t.x+e.x)/2,y:(t.y+e.y)/2}}function i(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}r.r(e);var o=function(){function t(t){this.svg=t,this.trianglePoints=[u(),u(),u()],this.triangleSides=[a(),a(),a()],this.triangleHeights=[a(),a(),a()],t.append.apply(t,this.trianglePoints),t.append.apply(t,this.triangleSides),t.append.apply(t,this.triangleHeights)}return t.prototype.draw=function(t){for(var e,r=[{a:n((e=t)[1],e[2]),b:e[0]},{a:n(e[0],e[2]),b:e[1]},{a:n(e[0],e[1]),b:e[2]}],i=function(t){return[{a:t[0],b:t[1]},{a:t[1],b:t[2]},{a:t[2],b:t[0]}]}(t),o=0;o<t.length;++o){var u=t[o],a=r[o],s=i[o];this.trianglePoints[o].setAttribute("cx",(150*u.x).toString()),this.trianglePoints[o].setAttribute("cy",(150*u.y).toString()),this.triangleSides[o].setAttribute("x1",(150*s.a.x).toString()),this.triangleSides[o].setAttribute("y1",(150*s.a.y).toString()),this.triangleSides[o].setAttribute("x2",(150*s.b.x).toString()),this.triangleSides[o].setAttribute("y2",(150*s.b.y).toString()),this.triangleHeights[o].setAttribute("x1",(150*a.a.x).toString()),this.triangleHeights[o].setAttribute("y1",(150*a.a.y).toString()),this.triangleHeights[o].setAttribute("x2",(150*a.b.x).toString()),this.triangleHeights[o].setAttribute("y2",(150*a.b.y).toString())}},t}();function u(){return i("circle")}function a(t){void 0===t&&(t="black");var e=i("line");return e.setAttribute("stroke",t),e}!function(){var t=document.getElementById("firstTriangle");if(null===t)throw new Error("No SVG element with requested ID");var e,r=[{x:0,y:-(e=.5*Math.sqrt(3))/3},{x:.5,y:2*e/3},{x:-.5,y:2*e/3}];new o(t).draw(r)}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,